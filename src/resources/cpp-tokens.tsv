"name"	"token"	"category"
"bool"	"bool"	"word"
"char"	"char"	"word"
"char16_t"	"char16_t"	"word"
"char32_t"	"char32_t"	"word"
"float"	"float"	"word"
"int"	"int"	"word"
"short"	"short"	"word"
"long"	"long"	"word"
"signed"	"signed"	"word"
"unsigned"	"unsigned"	"word"
"void"	"void"	"word"
"wchar_t"	"wchar_t"	"word"
"alignas"	"alignas"	"word"
"alignof"	"alignof"	"word"
"asm"	"asm"	"word"
"auto"	"auto"	"word"
"break"	"break"	"word"
"case"	"case"	"word"
"catch"	"catch"	"word"
"class"	"class"	"word"
"const"	"const"	"word"
"constexpr"	"constexpr"	"word"
"const_cast"	"const_cast"	"word"
"continue"	"continue"	"word"
"decltype"	"decltype"	"word"
"default"	"default"	"word"
"delete"	"delete"	"word"
"do"	"do"	"word"
"double"	"double"	"word"
"dynamic_cast"	"dynamic_cast"	"word"
"else"	"else"	"word"
"enum"	"enum"	"word"
"explicit"	"explicit"	"word"
"export"	"export"	"word"
"extern"	"extern"	"word"
"final"	"final"	"word"
"for"	"for"	"word"
"friend"	"friend"	"word"
"goto"	"goto"	"word"
"if"	"if"	"word"
"inline"	"inline"	"word"
"mutable"	"mutable"	"word"
"namespace"	"namespace"	"word"
"new"	"new"	"word"
"noexcept"	"noexcept"	"word"
"nullptr"	"nullptr"	"word"
"operator"	"operator"	"word"
"override"	"override"	"word"
"private"	"private"	"word"
"protected"	"protected"	"word"
"public"	"public"	"word"
"register"	"register"	"word"
"reinterpret_cast"	"reinterpret_cast"	"word"
"return"	"return"	"word"
"sizeof"	"sizeof"	"word"
"static"	"static"	"word"
"static_assert"	"static_assert"	"word"
"static_cast"	"static_cast"	"word"
"struct"	"struct"	"word"
"switch"	"switch"	"word"
"template"	"template"	"word"
"this"	"this"	"word"
"thread_local"	"thread_local"	"word"
"throw"	"throw"	"word"
"try"	"try"	"word"
"typedef"	"typedef"	"word"
"typeid"	"typeid"	"word"
"typename"	"typename"	"word"
"union"	"union"	"word"
"using"	"using"	"word"
"virtual"	"virtual"	"word"
"volatile"	"volatile"	"word"
"while"	"while"	"word"
"set"	"="	"word"
"sum_eq"	"+="	"word"
"sub_eq"	"-="	"word"
"mul_eq"	"*="	"word"
"div_eq"	"/="	"word"
"mod_eq"	"%="	"word"
"or_eq"	"|="	"word"
"and_eq"	"&="	"word"
"xor_eq"	"^="	"word"
"rshift_eq"	">>="	"word"
"lshift_eq"	"<<="	"word"
"sum"	"+"	"word"
"sub"	"-"	"word"
"mul"	"*"	"word"
"div"	"/"	"word"
"mod"	"%"	"word"
"bitor"	"|"	"word"
"bitand"	"&"	"word"
"rshift"	">>"	"word"
"lshift"	"<<"	"word"
"compl"	"~"	"punctuation"
"not"	"!"	"punctuation"
"and"	"&&"	"word"
"or"	"||"	"word"
"xor"	"^"	"word"
"eq"	"=="	"word"
"not_eq"	"!="	"word"
"inc"	"++"	"punctuation"
"dec"	"--"	"punctuation"
"minus"	"-"	"word"
"plus"	"+"	"word"
"iff"	"?"	"word"
"addressof"	"&"	"punctuation"
"accessto"	"*"	"punctuation"
"obj_member"	"."	"punctuation"
"ref_member"	"->"	"punctuation"
"addressof_obj_member"	".*"	"punctuation"
"addressof_ref_member"	"->*"	"punctuation"
"gt"	">"	"word"
"lt"	"<"	"word"
"gte"	"<="	"word"
"lte"	">="	"word"
"IF"	"#if"	"word"
"IFDEF"	"#ifdef"	"word"
"IFNDEF"	"#ifndef"	"word"
"ENDIF"	"#endif"	"word"
"DEFINE"	"#define"	"word"
"INCLUDE"	"#include"	"word"
"WARNING"	"#warning"	"word"
"ERROR"	"#error"	"word"
"PRAGMA"	"#pragma"	"word"
"LINE"	"#line"	"word"
"identifier"	""	"word"
"blank"	""	"blank"
"nl"	""	"blank"
"line_comment"	""	"blank"
"block_comment"	""	"blank"
"s"	","	"punctuation"
"sm"	";"	"punctuation"
"cl"	":"	"punctuation"
"sc"	"::"	"punctuation"